# docker-compose.yaml
# 同样遵循严格的缩进
#网络模式都选择主机模式，方便服务间通信
version: '3.1'

services:
  consignment-cli:
    build: ./consignment-cli
    environment:
      MICRO_REGISTRY: "mdns"

  consignment-service:
    build: ./consignment-service
    network_mode: "host"
    ports:
      - 50051:50051
    environment:
      MICRO_ADRESS: ":50051"
      MICRO_REGISTRY: "mdns"
      DB_HOST: "localhost:27017"
      #DISABLE_AUTH: "true"

  vessel-service:
    build: ./vessel-service
    network_mode: "host"
    ports:
      - 50052:50051
    environment:
      MICRO_ADRESS: ":50051"
      MICRO_REGISTRY: "mdns"
      DB_HOST: "localhost:27017"

  user-service:
    build: ./user-service
    network_mode: "host"
    ports:
      - 50053:50051
    environment:
      MICRO_ADRESS: ":50051"
      MICRO_REGISTRY: "mdns"
      DB_NAME: "postgres"
      DB_HOST: "localhost"
      DB_PORT: "5432"
      DB_USER: "postgres"
      DB_PASSWORD: "postgres"
    #depends_on:
      #- database

  user-cli:
    build: ./user-cli
    environment:
      MICRO_REGISTRY: "mdns"

  datastore:
    image: mongo
    network_mode: "host"
    ports:
      - 27017:27017

  database:
    image: postgres
    network_mode: "host"
    ports:
      - 5432:5432

  mq:
    image: nats
    ports:
      - 4222:4222



  micro:
    command: api --handler=rpc --namespace=go.micro.srv
    image: microhq/micro:latest
    ports:
      - 8080:8080
    environment:
      MICRO_REGISTRY: "mdns"

#docker run -p 8080:8080 -e MICRO_REGISTRY=mdns microhq/micro api --handler=rpc --address=:8080 --namespace=shippy

